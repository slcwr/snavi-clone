"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_components_organisms_CsvUproad_CsvUploadComponent_tsx",{

/***/ "./src/components/organisms/CsvUproad/CsvUploadComponent.tsx":
/*!*******************************************************************!*\
  !*** ./src/components/organisms/CsvUproad/CsvUploadComponent.tsx ***!
  \*******************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_papaparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-papaparse */ \"./node_modules/react-papaparse/dist/react-papaparse.es.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// components/CsvUploadComponent.tsx\n/* __next_internal_client_entry_do_not_use__  auto */ var _s = $RefreshSig$();\n\n\nconst CsvUploadComponent = ()=>{\n    _s();\n    const { CSVReader } = (0,react_papaparse__WEBPACK_IMPORTED_MODULE_0__.useCSVReader)();\n    const [csvData, setCsvData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showConfirmation, setShowConfirmation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n// ... 残りのコード\n} // 'use client';\n // import { useCSVReader } from 'react-papaparse';\n // import { useState } from 'react';\n // const CsvUploadComponent = () => {\n //   const { CSVReader } = useCSVReader();\n //   const [csvData, setCsvData] = useState<any[]>([]);\n //   const [showConfirmation, setShowConfirmation] = useState(false);\n //   const handleUpload = async () => {\n //     try {\n //       const response = await fetch('/api/upload', {\n //         method: 'POST',\n //         headers: {\n //           'Content-Type': 'application/json',\n //         },\n //         body: JSON.stringify({ data: csvData }),\n //       });\n //       if (response.ok) {\n //         alert('アップロード成功');\n //         setShowConfirmation(false);\n //       }\n //     } catch (error) {\n //       console.error('Upload failed:', error);\n //     }\n //   };\n //   return (\n //     <div>\n //       {!showConfirmation ? (\n //         <CSVReader\n //           onUploadAccepted={(results: any) => {\n //             setCsvData(results.data);\n //             setShowConfirmation(true);\n //           }}\n //         >\n //           {/* CSVReader実装 */}\n //         </CSVReader>\n //       ) : (\n //         <div>\n //           <table>\n //             <thead>\n //               {/* ヘッダー行 */}\n //             </thead>\n //             <tbody>\n //               {/* データ行 */}\n //             </tbody>\n //           </table>\n //           <button onClick={handleUpload}>アップロード実行</button>\n //         </div>\n //       )}\n //     </div>\n //   );\n // };\n // export default CsvUploadComponent;\n;\n_s(CsvUploadComponent, \"3FDtNY98DigcdDe6Zzet2kS38pg=\", false, function() {\n    return [\n        react_papaparse__WEBPACK_IMPORTED_MODULE_0__.useCSVReader\n    ];\n});\n_c = CsvUploadComponent;\nvar _c;\n$RefreshReg$(_c, \"CsvUploadComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ3N2VXByb2FkL0NzdlVwbG9hZENvbXBvbmVudC50c3giLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG9DQUFvQzs7QUFFVTtBQUNkO0FBRWhDLE1BQU1FLHFCQUFxQjs7SUFDekIsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR0gsNkRBQVlBO0lBQ2xDLE1BQU0sQ0FBQ0ksU0FBU0MsV0FBVyxHQUFHSiwrQ0FBUUEsQ0FBUSxFQUFFO0lBQ2hELE1BQU0sQ0FBQ0ssa0JBQWtCQyxvQkFBb0IsR0FBR04sK0NBQVFBLENBQUM7QUFFekQsYUFBYTtBQUNmLEVBT0EsZ0JBQWdCO0NBQ2hCLGtEQUFrRDtDQUNsRCxvQ0FBb0M7Q0FFcEMscUNBQXFDO0NBQ3JDLDBDQUEwQztDQUMxQyx1REFBdUQ7Q0FDdkQscUVBQXFFO0NBRXJFLHVDQUF1QztDQUN2QyxZQUFZO0NBQ1osc0RBQXNEO0NBQ3RELDBCQUEwQjtDQUMxQixxQkFBcUI7Q0FDckIsZ0RBQWdEO0NBQ2hELGFBQWE7Q0FDYixtREFBbUQ7Q0FDbkQsWUFBWTtDQUNaLDJCQUEyQjtDQUMzQiw2QkFBNkI7Q0FDN0Isc0NBQXNDO0NBQ3RDLFVBQVU7Q0FDVix3QkFBd0I7Q0FDeEIsZ0RBQWdEO0NBQ2hELFFBQVE7Q0FDUixPQUFPO0NBRVAsYUFBYTtDQUNiLFlBQVk7Q0FDWiwrQkFBK0I7Q0FDL0IscUJBQXFCO0NBQ3JCLGtEQUFrRDtDQUNsRCx3Q0FBd0M7Q0FDeEMseUNBQXlDO0NBQ3pDLGVBQWU7Q0FDZixZQUFZO0NBQ1osZ0NBQWdDO0NBQ2hDLHVCQUF1QjtDQUN2QixjQUFjO0NBQ2QsZ0JBQWdCO0NBQ2hCLG9CQUFvQjtDQUNwQixzQkFBc0I7Q0FDdEIsOEJBQThCO0NBQzlCLHVCQUF1QjtDQUN2QixzQkFBc0I7Q0FDdEIsNkJBQTZCO0NBQzdCLHVCQUF1QjtDQUN2QixxQkFBcUI7Q0FDckIsNkRBQTZEO0NBQzdELGlCQUFpQjtDQUNqQixXQUFXO0NBQ1gsYUFBYTtDQUNiLE9BQU87Q0FDUCxLQUFLO0NBRUwscUNBQXFDOztHQXBFL0JDOztRQUNrQkYseURBQVlBOzs7S0FEOUJFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Dc3ZVcHJvYWQvQ3N2VXBsb2FkQ29tcG9uZW50LnRzeD81ZTg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvQ3N2VXBsb2FkQ29tcG9uZW50LnRzeFxuJ3VzZSBjbGllbnQnXG5pbXBvcnQgeyB1c2VDU1ZSZWFkZXIgfSBmcm9tICdyZWFjdC1wYXBhcGFyc2UnXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuXG5jb25zdCBDc3ZVcGxvYWRDb21wb25lbnQgPSAoKSA9PiB7XG4gIGNvbnN0IHsgQ1NWUmVhZGVyIH0gPSB1c2VDU1ZSZWFkZXIoKVxuICBjb25zdCBbY3N2RGF0YSwgc2V0Q3N2RGF0YV0gPSB1c2VTdGF0ZTxhbnlbXT4oW10pXG4gIGNvbnN0IFtzaG93Q29uZmlybWF0aW9uLCBzZXRTaG93Q29uZmlybWF0aW9uXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIC8vIC4uLiDmrovjgorjga7jgrPjg7zjg4lcbn1cblxuXG5cblxuXG5cbi8vICd1c2UgY2xpZW50Jztcbi8vIGltcG9ydCB7IHVzZUNTVlJlYWRlciB9IGZyb20gJ3JlYWN0LXBhcGFwYXJzZSc7XG4vLyBpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuLy8gY29uc3QgQ3N2VXBsb2FkQ29tcG9uZW50ID0gKCkgPT4ge1xuLy8gICBjb25zdCB7IENTVlJlYWRlciB9ID0gdXNlQ1NWUmVhZGVyKCk7XG4vLyAgIGNvbnN0IFtjc3ZEYXRhLCBzZXRDc3ZEYXRhXSA9IHVzZVN0YXRlPGFueVtdPihbXSk7XG4vLyAgIGNvbnN0IFtzaG93Q29uZmlybWF0aW9uLCBzZXRTaG93Q29uZmlybWF0aW9uXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuLy8gICBjb25zdCBoYW5kbGVVcGxvYWQgPSBhc3luYyAoKSA9PiB7XG4vLyAgICAgdHJ5IHtcbi8vICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdXBsb2FkJywge1xuLy8gICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbi8vICAgICAgICAgaGVhZGVyczoge1xuLy8gICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4vLyAgICAgICAgIH0sXG4vLyAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZGF0YTogY3N2RGF0YSB9KSxcbi8vICAgICAgIH0pO1xuLy8gICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4vLyAgICAgICAgIGFsZXJ0KCfjgqLjg4Pjg5fjg63jg7zjg4nmiJDlip8nKTtcbi8vICAgICAgICAgc2V0U2hvd0NvbmZpcm1hdGlvbihmYWxzZSk7XG4vLyAgICAgICB9XG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VwbG9hZCBmYWlsZWQ6JywgZXJyb3IpO1xuLy8gICAgIH1cbi8vICAgfTtcblxuLy8gICByZXR1cm4gKFxuLy8gICAgIDxkaXY+XG4vLyAgICAgICB7IXNob3dDb25maXJtYXRpb24gPyAoXG4vLyAgICAgICAgIDxDU1ZSZWFkZXJcbi8vICAgICAgICAgICBvblVwbG9hZEFjY2VwdGVkPXsocmVzdWx0czogYW55KSA9PiB7XG4vLyAgICAgICAgICAgICBzZXRDc3ZEYXRhKHJlc3VsdHMuZGF0YSk7XG4vLyAgICAgICAgICAgICBzZXRTaG93Q29uZmlybWF0aW9uKHRydWUpO1xuLy8gICAgICAgICAgIH19XG4vLyAgICAgICAgID5cbi8vICAgICAgICAgICB7LyogQ1NWUmVhZGVy5a6f6KOFICovfVxuLy8gICAgICAgICA8L0NTVlJlYWRlcj5cbi8vICAgICAgICkgOiAoXG4vLyAgICAgICAgIDxkaXY+XG4vLyAgICAgICAgICAgPHRhYmxlPlxuLy8gICAgICAgICAgICAgPHRoZWFkPlxuLy8gICAgICAgICAgICAgICB7Lyog44OY44OD44OA44O86KGMICovfVxuLy8gICAgICAgICAgICAgPC90aGVhZD5cbi8vICAgICAgICAgICAgIDx0Ym9keT5cbi8vICAgICAgICAgICAgICAgey8qIOODh+ODvOOCv+ihjCAqL31cbi8vICAgICAgICAgICAgIDwvdGJvZHk+XG4vLyAgICAgICAgICAgPC90YWJsZT5cbi8vICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZVVwbG9hZH0+44Ki44OD44OX44Ot44O844OJ5a6f6KGMPC9idXR0b24+XG4vLyAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgKX1cbi8vICAgICA8L2Rpdj5cbi8vICAgKTtcbi8vIH07XG5cbi8vIGV4cG9ydCBkZWZhdWx0IENzdlVwbG9hZENvbXBvbmVudDsiXSwibmFtZXMiOlsidXNlQ1NWUmVhZGVyIiwidXNlU3RhdGUiLCJDc3ZVcGxvYWRDb21wb25lbnQiLCJDU1ZSZWFkZXIiLCJjc3ZEYXRhIiwic2V0Q3N2RGF0YSIsInNob3dDb25maXJtYXRpb24iLCJzZXRTaG93Q29uZmlybWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/organisms/CsvUproad/CsvUploadComponent.tsx\n"));

/***/ })

});